{"version":3,"sources":["components/utils/axios.js","components/Login.js","components/Header.js","components/TodoItems.js","components/Seletor.js","components/Todo.js","components/Footer.js","components/Register.js","components/ForgotPW.js","components/Logout.js","App.js","index.js"],"names":["config","headers","Authorization","localStorage","getItem","updateToBackEnd","url","message","method","axios","post","then","res","console","log","data","catch","get","Login","props","state","login","bind","e","this","_inputUser","value","_inputPW","userInfo","Name","Password","setItem","token","setUser","userName","err","setState","response","loggedIn","preventDefault","to","error","className","onSubmit","ref","a","placeholder","type","name","size","maxLength","id","Component","Header","logLink","user","TodoItems","createTasks","key","delete","completed","item","style","display","icon","onClick","text","textDecoration","onChange","setUpdate","target","ListItems","entries","map","duration","easing","Seletor","allItems","activeItems","completedItems","deleteCompletedItems","todoEntries","flag","fontSize","backgroundColor","library","add","far","faTrash","faCircle","faCheckCircle","Todo","items","addItem","deleteItem","completedItem","showAllItems","showActiveItems","showCompletedItems","_inputElement","newItem","Date","now","UserID","TodoThing","Completed","prevState","ItemID","filteredItems","filter","Footer","Register","register","_inputName","_inputCheckPW","ForgotPW","forgotPW","Logout","logout","clear","defaults","baseURL","common","App","exact","path","component","destination","document","querySelector","ReactDOM","render"],"mappings":"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","file":"static/js/main.4042013d.chunk.js","sourcesContent":["import axios from 'axios'\n\n\nconst config = {\n  headers: {\n    Authorization: 'Bearer ' + localStorage.getItem('token')\n  }\n}\n\nfunction auth () {\n  axios.post('token/vertify', {}, config).then(res => {\n    console.log('post请求成功：', res.data)\n    this.setState({\n      user: res.data.userName\n    });\n  },\n    err => {\n      console.log(err)\n    }\n  ).catch(() => { console.log('后台post请求处理失败') })\n}\n\nfunction updateToBackEnd (url, message, method = 'post') {\n  // 后台处理post请求\n  if (method === 'post') {\n    axios.post(url, message).then((res) => {\n      console.log('post请求成功：', res.data)\n    }).catch(() => { console.log('后台post请求处理失败') })\n  }\n\n  // 后台处理get请求\n  else if (method === 'get') {\n    axios.get(url, message, config).then((res) => {\n      console.log(res.data)\n    }).catch(() => { console.log('后台get请求处理失败') })\n  }\n}\n\nexport { config, auth, updateToBackEnd }\n\n\n","import React, { Component, Fragment } from 'react';\nimport { Link, Redirect } from \"react-router-dom\";\nimport \"../css//Login.css\";\nimport { updateToBackEnd } from './utils/axios'\nimport axios from 'axios'\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.login = this.login.bind(this)\n  }\n\n  login (e) {\n    if (this._inputUser.value !== '' && this._inputPW !== '') {\n      let userInfo = {\n        Name: this._inputUser.value,\n        Password: this._inputPW.value,\n      };\n      console.log(userInfo)\n\n      // 登录\n      // updateToBackEnd('user/login', userInfo)\n      axios.post('user/login', userInfo).then((res) => {\n        console.log('post请求成功：', res.data)\n        localStorage.setItem(\"name\", res.data.value)\n        localStorage.setItem(\"token\", res.data.token)\n        this.props.setUser(res.data.userName)\n      })\n        .catch((err) => {\n          console.log('后台post请求处理失败')\n          this.setState({ message: err.response.data.message })\n\n        })\n\n      this.setState({\n        loggedIn: true\n      });\n    }\n\n    e.preventDefault();\n  }\n\n  render () {\n    if (this.state.loggedIn) {\n      return <Redirect to={'/'} />;\n    }\n\n    let error = '';\n    if (this.state.message) {\n      error = (\n        <div className=\"alert\">{this.state.message}</div>\n      )\n    }\n    return (\n      <Fragment>\n        <div className=\"login-container\">\n          <form className=\"login-form\" onSubmit={this.login}>\n            {error}\n            <input\n              ref={(a) => { this._inputUser = a }}\n              placeholder=\"请输入用户名\">\n            </input>\n\n            <input\n              type=\"password\"\n              name=\"pass\"\n              size=\"20\"\n              maxLength=\"20\"\n              ref={(a) => { this._inputPW = a }}\n              placeholder=\"请输入密码\">\n            </input>\n\n            <div className=\"button-container\">\n              <button>\n                <Link to=\"/\" className=\"fixLink\">返回主页</Link>\n              </button>\n              <button type=\"submit\">\n                <Link to=\"/\" className=\"fixLink\">登录</Link>\n              </button>\n            </div>\n          </form>\n\n\n          <div id=\"setting-container\">\n            <Link to=\"/forgotPW\" className=\"fixLink setting\">忘记密码</Link>\n\n            <Link to=\"/register\" className=\"fixLink setting\">立即注册</Link>\n\n          </div>\n\n        </div>\n      </Fragment>)\n  }\n}\n\nexport default Login;","import React, { Component } from 'react';\nimport '../css/Header.css';\nimport { Link } from \"react-router-dom\";\n\nclass Header extends Component {\n  render () {\n    let logLink;\n    if (this.props.user) {\n      logLink = (<Link className=\"button fixLink\" to=\"/logout\">退出</Link>)\n    }\n    else {\n      logLink = (<Link className=\"button fixLink\" to=\"/login\">登录</Link>)\n    }\n\n    return (\n      <header id=\"Header-container\" >\n        <h1><Link className=\"fixLink\" to=\"/\">todos</Link></h1>\n        <div id=\"Header-buttons\">\n          <Link className=\"button fixLink\" to=\"/register\">注册</Link>\n          {logLink}\n        </div>\n      </header>)\n  }\n}\n\nexport default Header;\n\n\n\n","import React, { Component } from 'react';\nimport FlipMove from 'react-flip-move';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport \"../css//ListItem.css\";\n\n\nclass TodoItems extends Component {\n  constructor(props) {\n    super(props);\n    this.createTasks = this.createTasks.bind(this)\n  }\n\n  delete (key) {\n    this.props.delete(key)\n  }\n\n  completed (key) {\n    this.props.completed(key)\n  }\n\n  createTasks (item) {\n    return (\n      <div key={item.key} style={{ display: item.display }}>\n        <div className='circle'>\n          <FontAwesomeIcon\n            className='faicons'\n            icon={[\"far\", item.completed ? \"check-circle\" : \"circle\"]}\n            onClick={() => { this.completed(item.key) }} />\n        </div>\n        <li className={item.completed ? 'achieved' : ''}\n        >\n          <input\n            type=\"text\"\n            id={item.key}\n            value={item.text}\n            style={{ textDecoration: item.completed ? 'line-through' : '' }}\n            onChange={\n              (e) => {\n                this.props.setUpdate(e.target.value, item.key)\n              }}\n          ></input>\n          <span className='trash'>\n            <FontAwesomeIcon\n              className='faicons'\n              icon='trash'\n              onClick={() => { this.delete(item.key) }} />\n          </span>\n        </li>\n      </div>\n    )\n  }\n\n  render () {\n    let todoEntries = this.props.entries;\n    let ListItems = todoEntries.map(this.createTasks)\n    return (\n      <ul className=\"theList\">\n        <FlipMove duration={200} easing=\"ease-in-out\">\n          {ListItems}\n        </FlipMove>\n      </ul>\n    )\n  }\n}\n\nexport default TodoItems;","import React, { Component, Fragment } from 'react';\nimport '../css/Seletor.css';\n\n\nclass Seletor extends Component {\n\n  allItems () {\n    this.props.allItems()\n  }\n\n  activeItems () {\n    this.props.activeItems()\n  }\n\n  completedItems () {\n    this.props.completedItems()\n  }\n\n  deleteCompletedItems () {\n    this.props.deleteCompletedItems()\n  }\n\n  render () {\n    let todoEntries = this.props.entries;\n    let flag=false\n    todoEntries.map((item) => {\n      if (item.completed === true) {\n        return flag = true\n      }\n      return null\n    })\n    return (\n\n      <Fragment >\n        <div id=\"seletor-container\">\n          <button onClick={() => { this.allItems() }}>全部事项</button>\n          <button onClick={() => { this.activeItems() }}>待完成</button>\n          <button onClick={() => { this.completedItems() }}>已完成</button>\n          <button \n          onClick={() => { this.deleteCompletedItems() }} \n          style={{ display: flag ? 'block' : 'none' , fontSize:'12px',backgroundColor: '#f37a5a'}}\n           >删除已完成</button>\n        </div>\n      </Fragment>)\n  }\n}\n\nexport default Seletor;","import React, { Component, Fragment } from 'react';\nimport TodoItems from \"./TodoItems\";\nimport Seletor from './Seletor'\nimport \"../css//TodoList.css\";\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { far } from '@fortawesome/free-regular-svg-icons';\nimport { faTrash, faCircle, faCheckCircle } from '@fortawesome/free-solid-svg-icons'\n\n\nimport { updateToBackEnd } from './utils/axios'\n\nlibrary.add(far, faTrash, faCircle, faCheckCircle)\n\nclass Todo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n    };\n\n    this.addItem = this.addItem.bind(this)\n    this.deleteItem = this.deleteItem.bind(this)\n    this.completedItem = this.completedItem.bind(this)\n    this.setUpdate = this.setUpdate.bind(this)\n    this.showAllItems = this.showAllItems.bind(this)\n    this.showActiveItems = this.showActiveItems.bind(this)\n    this.showCompletedItems = this.showCompletedItems.bind(this)\n    this.deleteCompletedItems = this.deleteCompletedItems.bind(this)\n  }\n\n\n\n\n\n  addItem (e) {\n    if (this._inputElement.value !== '') {\n      let newItem = {\n        text: this._inputElement.value,\n        key: Date.now(),\n        completed: false,\n        display: 'block'\n      };\n\n      // 同步后端\n      let todoInfo = {\n        UserID: 'light',\n        TodoThing: newItem.text,\n        Completed: newItem.completed\n      };\n      updateToBackEnd('createTodo', todoInfo)\n\n      this.setState((prevState) => {\n        return {\n          items: [...prevState.items, newItem]\n        };\n      });\n    }\n    this._inputElement.value = \"\";\n    e.preventDefault();\n  }\n\n\n  completedItem (key) {\n    const items = this.state.items;\n    items.map((item) => {\n      if (item.key === key) {\n\n        // 同步后端\n        let todoInfo = {\n          UserID: 'light',\n          ItemID: 'f54cd3e2-2e10-42a7-b442-74663f043eac',\n          Completed: !item.completed\n        };\n        updateToBackEnd('updateTodo', todoInfo)\n\n        return item.completed = !item.completed\n      }\n      return null\n    })\n    this.setState({\n      items: items\n    })\n  }\n\n\n  deleteItem (key) {\n    let filteredItems = this.state.items.filter((item) => {\n      return item.key !== key\n    })\n    this.setState({\n      items: filteredItems\n    })\n  }\n\n  setUpdate (text, key) {\n    const items = this.state.items;\n    items.map((item) => {\n      if (item.key === key) {\n        // 同步后端\n        let todoInfo = {\n          UserID: 'light',\n          ItemID: '',\n          Completed: item.completed,\n          TodoThing: text\n        };\n        updateToBackEnd('updateTodo', todoInfo)\n        return item.text = text\n      }\n      return null\n    })\n    this.setState({\n      items: items\n    })\n  }\n\n  showAllItems () {\n    const items = this.state.items;\n    items.map((item) => {\n      return item.display = 'block'\n    })\n    this.setState({\n      items: items\n    })\n  }\n\n  showActiveItems () {\n    const items = this.state.items;\n    items.map((item) => {\n      if (item.completed === false) {\n        return item.display = 'block'\n      }\n      else {\n        return item.display = 'none'\n      }\n    })\n    this.setState({\n      items: items\n    })\n  }\n\n  showCompletedItems () {\n    const items = this.state.items;\n    items.map((item) => {\n      if (item.completed === true) {\n        return item.display = 'block'\n      }\n      else {\n        return item.display = 'none'\n      }\n    })\n    this.setState({\n      items: items\n    })\n  }\n\n  deleteCompletedItems () {\n    let filteredItems = this.state.items.filter((item) => {\n      return item.completed === false\n    })\n    this.setState({\n      items: filteredItems\n    })\n  }\n\n  render () {\n    if (this.state.user) {\n      console.log(this.state.user)\n    }\n    return (\n      <Fragment>\n        <div className=\"todoListMain\">\n          <header>\n            <form id=\"to-do-form\" onSubmit={this.addItem} >\n              <input\n                ref={(a) => { this._inputElement = a }}\n                placeholder=\"请输入待办事项\">\n              </input>\n              <button type=\"submit\">添加</button>\n            </form>\n          </header>\n\n          <TodoItems\n            entries={this.state.items}\n            delete={this.deleteItem}\n            completed={this.completedItem}\n            setUpdate={this.setUpdate}\n          ></TodoItems>\n          <Seletor\n            entries={this.state.items}\n            allItems={this.showAllItems}\n            activeItems={this.showActiveItems}\n            completedItems={this.showCompletedItems}\n            deleteCompletedItems={this.deleteCompletedItems}\n          ></Seletor>\n        </div>\n      </Fragment>\n\n    );\n  }\n}\n\nexport default Todo;","import React, { Component } from 'react';\nimport '../css/Footer.css';\n\nclass Footer extends Component {\n  render () {\n    return(\n    <div id=\"slogan\">\n      <footer>想全是问题，做才有办法</footer>\n    </div>)\n  }\n}\n\nexport default Footer;","import React, { Component, Fragment } from 'react';\nimport { Link } from \"react-router-dom\";\nimport \"../css//Register.css\";\nimport axios from 'axios'\nimport { updateToBackEnd } from './utils/axios'\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.register = this.register.bind(this)\n  }\n\n  register (e) {\n\n\n    // 创建用户\n    if (this._inputName.value !== '' && this._inputPW !== '') {\n      let userInfo = {\n        Name: this._inputName.value,\n        Password: this._inputPW.value,\n      };\n      localStorage.setItem(\"name\", this._inputName.value)\n\n      console.log(userInfo)\n\n      // 向后端传入参数，获取token\n      axios.post('token', userInfo).then((res) => {\n        localStorage.setItem(\"token\", res.data.token)\n        console.log('返回的token为：', res.data.token)\n      }).then(() => {\n        updateToBackEnd('user/register', userInfo)\n      }\n      )\n        .catch((err) => {\n          console.log('后台post请求处理失败')\n          this.setState({ message: err.response.data.message })\n\n        })\n    }\n\n    e.preventDefault();\n  }\n\n\n  render () {\n    let error = '';\n    \n    if (this.state.message) {\n      error = (\n        <div className=\"alert\">{this.state.message}</div>\n      )\n    }\n    return (\n      <Fragment>\n        <div className=\"register-container\">\n          <form className=\"register-form\" onSubmit={this.register}>\n\n            {error}\n            <input\n              ref={(a) => { this._inputName = a }}\n              placeholder=\"请输入用户名\">\n            </input>\n\n            <input\n              type=\"password\" name=\"pass\" size=\"20\" maxLength=\"20\"\n              ref={(a) => { this._inputPW = a }}\n              placeholder=\"请输入密码\">\n            </input>\n\n            <input\n              type=\"password\" name=\"pass\" size=\"20\" maxLength=\"20\"\n              ref={(a) => { this._inputCheckPW = a }}\n              placeholder=\"确认密码\">\n            </input>\n\n            <div className=\"button-container\">\n              <button><Link to=\"/\" className=\"fixLink\">返回主页</Link></button>\n              <button type=\"submit\">\n                <Link to=\"/\" className=\"fixLink\">注册</Link>\n              </button>\n            </div>\n          </form>\n        </div>\n      </Fragment>)\n  }\n}\n\nexport default Register;","import React, { Component, Fragment } from 'react';\nimport { Link } from \"react-router-dom\";\nimport \"../css//Login.css\";\nimport axios from 'axios'\n\nclass ForgotPW extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.forgotPW = this.forgotPW.bind(this)\n  }\n\n  forgotPW (e) {\n    if (this._inputUser.value !== '' && this._inputPW !== '') {\n      let userInfo = {\n        Name: this._inputUser.value,\n        Password: this._inputPW.value,\n      };\n      console.log(userInfo)\n\n      axios.post('user/changePW', userInfo).then(\n        res => {\n          console.log('身份验证请求成功：', res.data)\n          this.setUser(res.data.userName)\n        },\n        err => {\n          console.log(err)\n        }\n      ).catch((err) => {\n        console.log('后台post请求处理失败')\n        this.setState({ message: err.response.data.message })\n      })\n    }\n\n    e.preventDefault();\n  }\n\n  render () {\n    let error = '';\n\n    if (this.state.message) {\n      error = (\n        <div className=\"alert\">{this.state.message}</div>\n      )\n    }\n    return (\n      <Fragment>\n        <div className=\"login-container\">\n          <form className=\"login-form\" onSubmit={this.forgotPW}>\n            {error}\n            <input\n              ref={(a) => { this._inputUser = a }}\n              placeholder=\"请输入用户名\">\n            </input>\n\n            <input\n              type=\"password\"\n              name=\"pass\"\n              size=\"20\"\n              maxLength=\"20\"\n              ref={(a) => { this._inputPW = a }}\n              placeholder=\"请输入新密码\">\n            </input>\n\n            <input\n              type=\"password\" name=\"pass\" size=\"20\" maxLength=\"20\"\n              ref={(a) => { this._inputCheckPW = a }}\n              placeholder=\"确认新密码\">\n            </input>\n\n            <div className=\"button-container\">\n              <button>\n                <Link to=\"/\" className=\"fixLink\">返回主页</Link>\n              </button>\n              <button type=\"submit\">\n                <Link to=\"/\" className=\"fixLink\">修改</Link>\n              </button>\n            </div>\n          </form>\n\n        </div>\n      </Fragment>)\n  }\n}\n\nexport default ForgotPW;","import React, { Component, Fragment } from 'react';\nimport { Link } from \"react-router-dom\";\nimport \"../css//Login.css\";\n\nclass Logout extends Component {\n  constructor(props) {\n    super(props);\n    this.logout = this.logout.bind(this)\n  }\n\n  logout () {\n    console.log('logout');\n    localStorage.clear();\n    this.props.setUser(null);\n  }\n\n  render () {\n    return (\n      <Fragment>\n        <div className=\"login-container\">\n          <form className=\"login-form\" >\n            <div className=\"button-container\">\n              <button>\n                <Link to=\"/\" className=\"fixLink\">返回主页</Link>\n              </button>\n              <button onClick={() => { this.logout() }}>\n                <Link to=\"/\" className=\"fixLink\">退出登录</Link>\n              </button>\n            </div>\n          </form>\n        </div>\n      </Fragment>)\n  }\n}\n\nexport default Logout;","import React, { Component } from 'react';\nimport './css/index.css';\nimport Login from './components/Login'\nimport Header from './components/Header'\nimport Todo from './components/Todo'\nimport Footer from './components/Footer'\nimport Register from './components/Register'\nimport ForgotPW from './components/ForgotPW'\nimport Logout from './components/Logout'\nimport axios from 'axios'\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\n\naxios.defaults.baseURL = 'http://localhost:3001/';\naxios.defaults.headers.common[\"Authorization\"] = 'Bearer ' + localStorage.getItem('token')\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  componentDidMount () {\n    // 验证token\n    axios.post('token/vertify').then(\n      res => {\n        console.log('身份验证请求成功：', res.data)\n        this.setUser(res.data.userName)\n\n      },\n      err => {\n        console.log(err)\n      }\n    )\n    this.setUser = user => {\n      this.setState({\n        user: user\n      });\n\n    }\n  }\n\n  render () {\n    console.log('用户:', this.state.user)\n    return (\n      <div>\n        <Router>\n          <Header user={this.state.user} setUser={this.setUser} ></Header>\n          <div className=\"app\">\n            <Switch>\n              <Route exact path=\"/forgotPW\" component={() => <ForgotPW user={this.state.user} />} />\n              <Route exact path=\"/login\" component={() => <Login setUser={this.setUser} />} />\n              <Route exact path=\"/logout\" component={() => <Logout setUser={this.setUser} />} />\n              <Route exact path=\"/register\" component={() => <Register setUser={this.setUser} />} />\n              <Route exact path=\"/\" component={() => <Todo user={this.state.user} />} />\n            </Switch>\n          </div>\n        </Router>\n        <Footer></Footer>\n      </div>\n    )\n  }\n\n}\nexport default App;\n","import ReactDOM from 'react-dom';\nimport React from 'react';\nimport './css/index.css';\nimport App from './App'\n\n\nlet destination = document.querySelector('#container');\n\nReactDOM.render(<App />, destination);\n"],"sourceRoot":""}